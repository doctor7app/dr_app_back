version: '3.9'

services:
  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5301:5341
      - 5302:80

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "5303:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "5304:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      prometheus:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5201:5432
    volumes:
      - ./.containers/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5202:5672"  # RabbitMQ message broker
      - "5203:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - ./.containers/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  docmanagement-svc:
    image: ${DOCKER_REGISTRY-}docmanagement-svc
    build:
      context: .
      dockerfile: DocumentManagement/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080;9090
      - SeqLogging__URL=http://seq:5341
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://seq:5341/ingest/otlp/v1/traces
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - ConnectionStrings__MyDbPost=Server=postgres;User Id=postgres;Password=postgrespw;Database=docmanagement
      - StorageSettings__BasePath=/DocumentStorage
    ports:
      - 5101:8080
      - 5901:9090
    volumes:
      - ./.containers/docmanagement-svc/DocumentStorage:/DocumentStorage
    depends_on:
      postgres:
        condition: service_healthy
      seq:
        condition: service_started
      prometheus:
        condition: service_healthy

  patients-svc:
    image: ${DOCKER_REGISTRY-}patients-svc
    build:
      context: .
      dockerfile: Patients/Patients.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080;9090
      - SeqLogging__URL=http://seq:5341
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://seq:5341/ingest/otlp/v1/traces
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - ConnectionStrings__MyDbPost=Server=postgres;User Id=postgres;Password=postgrespw;Database=patientDB
    ports:
      - 5102:8080
      - 5902:9090
    depends_on:
      postgres:
        condition: service_healthy
      seq:
        condition: service_started
      prometheus:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
        
  dme-svc:
    image: ${DOCKER_REGISTRY-}dme-svc
    build:
      context: .
      dockerfile: Dme/Dme.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080;9090
      - SeqLogging__URL=http://seq:5341
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://seq:5341/ingest/otlp/v1/traces
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - ConnectionStrings__MyDbPost=Server=postgres;User Id=postgres;Password=postgrespw;Database=dmeDB
    ports:
      - 5103:8080
      - 5903:9090
    depends_on:
      postgres:
        condition: service_healthy
      seq:
        condition: service_started
      prometheus:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  prescriptions-svc:
    image: ${DOCKER_REGISTRY-}patients-svc
    build:
        context: .
        dockerfile: Prescriptions/Prescriptions.Api/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=8080;9090
        - SeqLogging__URL=http://seq:5341
        - OTEL_EXPORTER_OTLP_ENDPOINT=http://seq:5341/ingest/otlp/v1/traces
        - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
        - ConnectionStrings__MyDbPost=Server=postgres;User Id=postgres;Password=postgrespw;Database=prescriptionDB
    ports:
        - 5104:8080
        - 5904:9090
    depends_on:
        postgres:
            condition: service_healthy
        seq:
            condition: service_started
        prometheus:
            condition: service_healthy
        rabbitmq:
            condition: service_healthy
